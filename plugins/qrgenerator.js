const Asena = require('../events');
const {MessageType, MessageOptions, Mimetype} = require('@adiwajshing/baileys');
const fs = require('fs');
const axios = require('axios');
const Config = require('../config');
const request = require('request');
const got = require("got");

const NEED_TEXT = "You must enter text!"
const QR_DESC = "Converts the given text into a qr code image."

Asena.addCommand({pattern: 'qr ?(.*)', fromMe: true, desc: QR_DESC}, (async (message, match) => {

    if (match[1] === '') return await message.sendMessage(NEED_TEXT);

    var webimage = await axios.get(`https://api.qrserver.com/v1/create-qr-code/?size=500x500&data=${match[1].replace(/#/g, '\n')} `, { responseType: 'arraybuffer' })

    await message.sendMessage(Buffer.from(webimage.data), MessageType.image, {mimetype: Mimetype.jpg, contextInfo: { forwardingScore: 10, isForwarded: true }, caption: '*QR End*: ```'+match[1]+'```\n\nMade with *TARGN-Userbot*', thumbnail: "/9j/4AAQSkZJRgABAQAAAQABAAD/7QCEUGhvdG9zaG9wIDMuMAA4QklNBAQAAAAAAGgcAigAYkZCTUQwYTAwMGE2ZTAxMDAwMDI0MDIwMDAwZTMwMjAwMDAyYjAzMDAwMDkwMDMwMDAwYzkwNDAwMDBiMDA1MDAwMDI1MDYwMDAwNjkwNjAwMDBiNzA2MDAwMGVjMDcwMDAwAP/bAEMABgQFBgUEBgYFBgcHBggKEAoKCQkKFA4PDBAXFBgYFxQWFhodJR8aGyMcFhYgLCAjJicpKikZHy0wLSgwJSgpKP/bAEMBBwcHCggKEwoKEygaFhooKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKP/CABEIAJYAlgMBIgACEQEDEQH/xAAbAAEAAwADAQAAAAAAAAAAAAAABAUGAgMHAf/EABgBAQADAQAAAAAAAAAAAAAAAAABAgME/9oADAMBAAIQAxAAAAHyoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABy7tkdI7rzBTuUaV6x5RasWvyJqxjzgAAAStTj/Stmc4aXV6W887dqi+L7ZtvFsH92U2LeMDDmAAAAWVaLSu4DSx6X4bONleJKn0wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/8QAIRAAAgMAAQQDAQAAAAAAAAAAAwQBAgUABhEUMBMVcBb/2gAIAQEAAQUC/CYjvPxW58VueMTnik5ChZ54ZuQkaeeAfkomiPSsIhj/AE2rxjM0VwtgfSGLP1CinO16Vpn696xnbEccI8mRaXXaemtppbo85SudNhKwWBWcpo1AtnZdFa16o837LECO5X9IFtHKzbZ9PUi6dG5H2Lp0tNLaDGg5xMziB/uNeq/9DpcZORk62m2sD2zaZ5Npme89vw3/xAAeEQABBAIDAQAAAAAAAAAAAAABAAIDFDFSIEFQQv/aAAgBAwEBPwHwWtLsIQyHpVpdSqk+h5tcW4QnkHatTD6V2fc+t//EAB8RAAEDBAMBAAAAAAAAAAAAAAMAARQCBBFSIEJQkf/aAAgBAgEBPwHwB25StminKh3DdH+KIfR1FNq6jF1fkK5KJsDqwp1w/d1MPu6lm2dSjbet/8QALhAAAQMDAgMGBgMAAAAAAAAAAQACAwQREiExExSRBSMwNEFCECJhcJLRUXGi/9oACAEBAAY/AvsTb47Dqth1Ww6rYdVsOq2HVXsOvhMjhGUjjoF5YfkP2nSywWY3c3CY+phwa7QFMkjpwWOFwbhE8tp9CCg4U2h/mwXlm/kP2sKmIMd/Sl4EbXBg+b6eEHMJDh6hTiSV7xw/c6/qnVVXM/lojoHv0LlVQV1RTSMmPdhjtWKiirqieEsbjeE76LnKarrKhrTiWudfqF3HMcPAWwvZQkzdocdrcnCS+F1UUHabA6ny+R/qzRdoEPEkEkd43j138Nz6Z+DnCx0um0pf3DfaBZBzTZw1BVOyrOWWsYsBupOXdg/G7tjpuhMZu6JtfFq8x/gJ00xykduU6GGYiJ3ttfxhcnRXJN1a+n2O/8QAJhABAAICAgEDAwUAAAAAAAAAAREhADFBYZEQMFFwgfBxobHB8f/aAAgBAQABPyH6EsQ251nnOs84OT6BA1egghXjZ/h8SKMJ9pUzCaJfSMELnF1w4ZBUiG40w1h5Nb2OucZpRbIeBwiYEkk8LilYIk5EkyE6RjHub7ogz8vT7V0FBITCpSYJCnzjqMBD40y6K+8ZNWJNpwH7Pn5weKCq4BmtYc0AULWjucYMv1BrnWRdCaChZZduRKChLYfk/wA4JDaekb+T27aQUaffLNdIW3cbxbzQGxMM7Li04/vBzWShja6ax1OPMu61050vx6yQSZgCeOMm6BKAvcTr3rIuEusSoLau8mM0OJr6Hf/aAAwDAQACAAMAAAAQ8888888888888888888888888888888807+6z88888mm3jr8888888EUc8888888888888888888888888888888888888888888/8QAGhEBAAMBAQEAAAAAAAAAAAAAAQARkSFQIP/aAAgBAwEBPxDweObilDxgrRkxItwfvruolY9gix7FSnT1v//EAB4RAQACAgEFAAAAAAAAAAAAAAEAkSExUBEgUdHx/9oACAECAQE/EOAYKB4FjuXIluhnzmI5anuTMDnDHasi+7Iv7oodF3y3/8QAIhABAAICAgEFAQEAAAAAAAAAAREhADFBUTAQYXBx8YHB/9oACAEBAAE/EPgmEmSCXPzGfmMECBJKZ+IyQQ9a5+HyGSN+kAXopV0eIpspxQalQNO3DMRv8Eo8oKVbTRhdWIc5YSiaY09ZCwmlClQzKecN3KX8IlfoMB7II69hT6TJpLiLxUOJ52SC94ayOA7MKtRNaJ14no5K2diWZAKkCWwEw5PbyKBFUG1fLo50/SzwCExARt6YM4IBbALhJPeTNKJLSShghLQXxhwXfNqjWZ3zrI90nYBxDQTYZH9LDMWZCYlaWTCCgsFQENkA7CwpmTof88QAZESpjEBCwwE4I1IVlAbK2t3iezthSRHsTNUVEyoNSJkw3atUMBCUCki4X3y3CF86pY9w49B5qwBzQAoAUGsMQgCwEoNpdR35lkkQasDUdZsWui8LecVBWkag9x8Hf//Z"})

}));
